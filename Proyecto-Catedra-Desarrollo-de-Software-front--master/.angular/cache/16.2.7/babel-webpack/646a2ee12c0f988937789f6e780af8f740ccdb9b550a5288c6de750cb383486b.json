{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ListaProductosComponent = class ListaProductosComponent {\n  constructor(productoService, listaProductosService, cdr) {\n    //this.productos = productoService.getListaProductos();\n    this.productoService = productoService;\n    this.listaProductosService = listaProductosService;\n    this.cdr = cdr;\n    this.productos = [];\n    this.productoSeleccionado = null;\n  }\n  ngOnInit() {\n    this.productoService.getProductos().subscribe(productos => {\n      console.log(productos);\n      this.productos = productos;\n    });\n  }\n  editarProducto(producto) {\n    // Asigna el producto seleccionado para edición\n    this.productoSeleccionado = {\n      ...producto\n    };\n  }\n  guardarProducto() {\n    //verificar si hay un producto seleccionado para la edicion\n    if (this.productoSeleccionado) {\n      // Edición de producto existente: llamada al servicio\n      this.listaProductosService.editarProducto(this.productoSeleccionado.id, this.productoSeleccionado).subscribe(productoEditado => {\n        //productoEditado es el objeto que devuelve el servidor despues de la edicion\n        // Actualizar manualmente el objeto productoSeleccionado\n        this.productoSeleccionado = {\n          ...this.productoSeleccionado,\n          ...productoEditado\n        };\n        // Manejar la respuesta del servidor o realizar alguna acción adicional\n        console.log('Producto editado:', productoEditado);\n      });\n    }\n  }\n};\nListaProductosComponent = __decorate([Component({\n  selector: 'app-lista-productos',\n  templateUrl: './lista-productos.component.html',\n  styleUrls: ['./lista-productos.component.css']\n})], ListaProductosComponent);","map":{"version":3,"names":["Component","ListaProductosComponent","constructor","productoService","listaProductosService","cdr","productos","productoSeleccionado","ngOnInit","getProductos","subscribe","console","log","editarProducto","producto","guardarProducto","id","productoEditado","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\SIMM\\Desktop\\Nueva carpeta\\Desarrollo-de-software\\Proyecto-Catedra-Desarrollo-de-Software-front--master\\src\\app\\lista-productos\\lista-productos.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ProductosService } from '../compPrincipal/producto/productos.service'; \nimport { Producto } from '../compPrincipal/interfaces/Producto';\nimport { ListaProductoService } from '../lista-producto.service';\n\n\n@Component({\n  selector: 'app-lista-productos',\n  templateUrl: './lista-productos.component.html',\n  styleUrls: ['./lista-productos.component.css']\n})\nexport class ListaProductosComponent {\n  productos: Producto[] = [];\n  productoSeleccionado: Producto | null = null;\n\n  constructor(private productoService: ProductosService, private listaProductosService: ListaProductoService,  private cdr: ChangeDetectorRef) {\n    \n    //this.productos = productoService.getListaProductos();\n\n  }\n  \n  ngOnInit() {\n    this.productoService.getProductos().subscribe((productos: Producto[]) => {\n      console.log(productos);\n      this.productos = productos;\n    });\n  }\n\n  editarProducto(producto: Producto): void {\n    // Asigna el producto seleccionado para edición\n    this.productoSeleccionado = { ...producto };\n  }\n  \n  guardarProducto(): void {\n    //verificar si hay un producto seleccionado para la edicion\n    if (this.productoSeleccionado) {\n      // Edición de producto existente: llamada al servicio\n      this.listaProductosService\n        .editarProducto(this.productoSeleccionado.id,this.productoSeleccionado)\n        .subscribe((productoEditado) => {\n          //productoEditado es el objeto que devuelve el servidor despues de la edicion\n          // Actualizar manualmente el objeto productoSeleccionado\n          this.productoSeleccionado = { ...this.productoSeleccionado, ...productoEditado }; \n          // Manejar la respuesta del servidor o realizar alguna acción adicional\n          console.log('Producto editado:', productoEditado);\n        });\n    } \n  }\n  \n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAIlCC,YAAoBC,eAAiC,EAAUC,qBAA2C,EAAWC,GAAsB;IAEzI;IAFkB,KAAAF,eAAe,GAAfA,eAAe;IAA4B,KAAAC,qBAAqB,GAArBA,qBAAqB;IAAiC,KAAAC,GAAG,GAAHA,GAAG;IAHxH,KAAAC,SAAS,GAAe,EAAE;IAC1B,KAAAC,oBAAoB,GAAoB,IAAI;EAM5C;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACL,eAAe,CAACM,YAAY,EAAE,CAACC,SAAS,CAAEJ,SAAqB,IAAI;MACtEK,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;MACtB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,CAAC;EACJ;EAEAO,cAAcA,CAACC,QAAkB;IAC/B;IACA,IAAI,CAACP,oBAAoB,GAAG;MAAE,GAAGO;IAAQ,CAAE;EAC7C;EAEAC,eAAeA,CAAA;IACb;IACA,IAAI,IAAI,CAACR,oBAAoB,EAAE;MAC7B;MACA,IAAI,CAACH,qBAAqB,CACvBS,cAAc,CAAC,IAAI,CAACN,oBAAoB,CAACS,EAAE,EAAC,IAAI,CAACT,oBAAoB,CAAC,CACtEG,SAAS,CAAEO,eAAe,IAAI;QAC7B;QACA;QACA,IAAI,CAACV,oBAAoB,GAAG;UAAE,GAAG,IAAI,CAACA,oBAAoB;UAAE,GAAGU;QAAe,CAAE;QAChF;QACAN,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEK,eAAe,CAAC;MACnD,CAAC,CAAC;;EAER;CAED;AAtCYhB,uBAAuB,GAAAiB,UAAA,EALnClB,SAAS,CAAC;EACTmB,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWpB,uBAAuB,CAsCnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}