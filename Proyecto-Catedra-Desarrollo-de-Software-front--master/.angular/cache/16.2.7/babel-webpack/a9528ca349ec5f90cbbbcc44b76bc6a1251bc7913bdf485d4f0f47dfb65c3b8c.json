{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductosService {\n  constructor(http) {\n    this.http = http;\n    this.productoComponent = [];\n    this.ultimoId = 0;\n    this.productos = [];\n    this.apiUrl = 'http://localhost:8080/producto/lista';\n  }\n  getProductos() {\n    return this.http.get(this.apiUrl);\n  }\n  agregarProducto(producto) {\n    this.productos.push(producto);\n  }\n  static #_ = this.ɵfac = function ProductosService_Factory(t) {\n    return new (t || ProductosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductosService,\n    factory: ProductosService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ProductosService","constructor","http","productoComponent","ultimoId","productos","apiUrl","getProductos","get","agregarProducto","producto","push","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\SIMM\\Desktop\\Nueva carpeta\\Desarrollo-de-software\\Proyecto-Catedra-Desarrollo-de-Software-front--master\\src\\app\\compPrincipal\\producto\\productos.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ProductoComponent } from './producto.component';\nimport { Producto } from '../interfaces/Producto';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductosService {\n\n  productoComponent: ProductoComponent [] = [];\n  ultimoId: number=0;\n  private productos: Producto[] = [];\n\n  private apiUrl = 'http://localhost:8080/producto/lista';\n\n  constructor(private http: HttpClient) { }\n  \n\n  getProductos(): Observable<Producto[]> {\n    return this.http.get<Producto[]>(this.apiUrl);\n  }\n  \n  \n  agregarProducto(producto: Producto): void {\n    this.productos.push(producto);\n  }\n\n \n  \n}\n\n\n/*  crearProductos(productoComponent: ProductoComponent): ProductosService{\n    // Asigno el próximo ID ala nueva lista\n    productoComponent.id = ++this.ultimoId;\n    // Agrego el producto al array\n    this.productoComponent.push(productoComponent);\n    // Retorno el objeto con ID actualizado\n    return this;   \n   }\n   eliminarProducto(id: number): ProductosService{\n    // REemplazo la lista de productos por otro array resultante\n    //del filtro que excluye el producto por ID\n    this.productoComponent = this.productoComponent.filter(productoComponent => productoComponent.id !== id );\n    return this;\n  }\n  obtenerProducto(id: number): ProductoComponent | undefined{\n    // La función pop() retorna la tarea resultante del filtro por id\n    // En caso que no exista, retorna undefined\n    return this.productoComponent\n        .filter(productoComponent => productoComponent.id === id)\n        .pop();\n  }\n  modificarProducto(id: number, values: Object = {}): ProductoComponent | undefined{\n    // Obtengo la tarea por ID\n    let productoComponent = this.obtenerProducto(id);\n    if (!productoComponent){\n      // No la encontré\n      return undefined;\n    }    \n    // Actualizo la tarea con los valores recibidos en el parámetro\n    Object.assign(productoComponent, values);\n    // Retorno la tarea\n    return productoComponent;\n  }*/\n\n"],"mappings":";;AASA,OAAM,MAAOA,gBAAgB;EAQ3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANxB,KAAAC,iBAAiB,GAAyB,EAAE;IAC5C,KAAAC,QAAQ,GAAS,CAAC;IACV,KAAAC,SAAS,GAAe,EAAE;IAE1B,KAAAC,MAAM,GAAG,sCAAsC;EAEf;EAGxCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAa,IAAI,CAACF,MAAM,CAAC;EAC/C;EAGAG,eAAeA,CAACC,QAAkB;IAChC,IAAI,CAACL,SAAS,CAACM,IAAI,CAACD,QAAQ,CAAC;EAC/B;EAAC,QAAAE,CAAA,G;qBAlBUZ,gBAAgB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBjB,gBAAgB;IAAAkB,OAAA,EAAhBlB,gBAAgB,CAAAmB,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}