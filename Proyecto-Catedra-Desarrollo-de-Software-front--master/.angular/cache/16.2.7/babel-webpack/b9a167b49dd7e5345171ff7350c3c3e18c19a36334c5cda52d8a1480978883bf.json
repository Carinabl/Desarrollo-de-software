{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./compPrincipal/producto/productos.service\";\nexport class ListaProductoService {\n  constructor(http, productoService) {\n    this.http = http;\n    this.productoService = productoService;\n    this.productos = [];\n    this.productoSeleccionado = null;\n    this.apiUrl = 'http://localhost:8080/producto';\n  }\n  getListaProductos() {\n    return this.productos;\n  }\n  editarNombre(id, nuevoNombre) {\n    const url = `${this.apiUrl}/editar/${id}?nombre=${nuevoNombre}`;\n    return this.http.put(url, {});\n  }\n  editarDescripcion(id, nuevaDescripcion) {\n    const url = `${this.apiUrl}/editar/${id}?descripcion=${nuevaDescripcion}`;\n    return this.http.put(url, {});\n  }\n  editarImagen(id, nuevaImagen) {\n    const url = `${this.apiUrl}/editar/${id}?imagenProducto=${nuevaImagen}`;\n    return this.http.put(url, {});\n  }\n  eliminarProducto(id) {\n    const url = `${this.apiUrl}/borrar/${id}`;\n    return this.http.delete(url);\n  }\n  static #_ = this.ɵfac = function ListaProductoService_Factory(t) {\n    return new (t || ListaProductoService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ProductosService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ListaProductoService,\n    factory: ListaProductoService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ListaProductoService","constructor","http","productoService","productos","productoSeleccionado","apiUrl","getListaProductos","editarNombre","id","nuevoNombre","url","put","editarDescripcion","nuevaDescripcion","editarImagen","nuevaImagen","eliminarProducto","delete","_","i0","ɵɵinject","i1","HttpClient","i2","ProductosService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\SIMM\\Desktop\\Nueva carpeta\\Desarrollo-de-software\\Proyecto-Catedra-Desarrollo-de-Software-front--master\\src\\app\\lista-producto.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Producto } from './compPrincipal/interfaces/Producto';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError, tap } from 'rxjs';\nimport { ProductosService } from './compPrincipal/producto/productos.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListaProductoService {\n  \n  private productos: Producto[] = [];\n  productoSeleccionado: Producto | null = null;\n  \n  private apiUrl = 'http://localhost:8080/producto';\n\n  constructor(private http: HttpClient, private productoService: ProductosService) { }\n\n  getListaProductos(): Producto[] {\n    return this.productos;\n  }\n\n  editarNombre(id: number, nuevoNombre: string): Observable<Producto> {\n    const url = `${this.apiUrl}/editar/${id}?nombre=${nuevoNombre}`;\n    return this.http.put<Producto>(url, {});\n  }\n\n  editarDescripcion(id: number, nuevaDescripcion: string): Observable<Producto> {\n    const url = `${this.apiUrl}/editar/${id}?descripcion=${nuevaDescripcion}`;\n    return this.http.put<Producto>(url, {});\n  }\n\n  editarImagen(id: number, nuevaImagen: string): Observable<Producto> {\n    const url = `${this.apiUrl}/editar/${id}?imagenProducto=${nuevaImagen}`;\n    return this.http.put<Producto>(url, {});\n  }\n\n  eliminarProducto(id: number): Observable<void> {\n    const url = `${this.apiUrl}/borrar/${id}`;\n    return this.http.delete<void>(url);\n  }\n\n}\n  /*\n  Guardar sin backend\n  guardarProducto(): void {\n    const updatedProducts = this.productos.map(product => {\n      return product.id === this.productoSeleccionado?.id ? { ...this.productoSeleccionado } : product;\n    });\n    //console.log(updatedProducts);\n    this.productos = [...updatedProducts];\n    this.productoSeleccionado = null;\n  }*/\n\n\n"],"mappings":";;;AAUA,OAAM,MAAOA,oBAAoB;EAO/BC,YAAoBC,IAAgB,EAAUC,eAAiC;IAA3D,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,eAAe,GAAfA,eAAe;IALrD,KAAAC,SAAS,GAAe,EAAE;IAClC,KAAAC,oBAAoB,GAAoB,IAAI;IAEpC,KAAAC,MAAM,GAAG,gCAAgC;EAEkC;EAEnFC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACH,SAAS;EACvB;EAEAI,YAAYA,CAACC,EAAU,EAAEC,WAAmB;IAC1C,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,WAAWG,EAAE,WAAWC,WAAW,EAAE;IAC/D,OAAO,IAAI,CAACR,IAAI,CAACU,GAAG,CAAWD,GAAG,EAAE,EAAE,CAAC;EACzC;EAEAE,iBAAiBA,CAACJ,EAAU,EAAEK,gBAAwB;IACpD,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,WAAWG,EAAE,gBAAgBK,gBAAgB,EAAE;IACzE,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAWD,GAAG,EAAE,EAAE,CAAC;EACzC;EAEAI,YAAYA,CAACN,EAAU,EAAEO,WAAmB;IAC1C,MAAML,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,WAAWG,EAAE,mBAAmBO,WAAW,EAAE;IACvE,OAAO,IAAI,CAACd,IAAI,CAACU,GAAG,CAAWD,GAAG,EAAE,EAAE,CAAC;EACzC;EAEAM,gBAAgBA,CAACR,EAAU;IACzB,MAAME,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,WAAWG,EAAE,EAAE;IACzC,OAAO,IAAI,CAACP,IAAI,CAACgB,MAAM,CAAOP,GAAG,CAAC;EACpC;EAAC,QAAAQ,CAAA,G;qBA/BUnB,oBAAoB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApB1B,oBAAoB;IAAA2B,OAAA,EAApB3B,oBAAoB,CAAA4B,IAAA;IAAAC,UAAA,EAFnB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}