{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\nexport let ListaProductosComponent = class ListaProductosComponent {\n  constructor(productoService, ofertaProductoService) {\n    this.productoService = productoService;\n    this.ofertaProductoService = ofertaProductoService;\n    this.productos = [];\n    this.productoSeleccionado = {\n      id: 0,\n      nombre: '',\n      descripcion: ''\n    };\n  }\n  ngOnInit() {\n    //consigue la lista de productos para mostrar en la tabla\n    this.productoService.getProductos().subscribe(productos => {\n      console.log(\"Productos: \", productos);\n      this.productos = productos;\n    });\n  }\n  editarProducto(id) {\n    console.log(`Editar producto con ID: ${id}`);\n    const productoElegido = this.productos.find(p => p.id === id);\n    console.log(\"Producto a elegir: \", productoElegido);\n    if (productoElegido) {\n      this.productoSeleccionado = productoElegido;\n      console.log(this.productoSeleccionado);\n    } else {\n      console.error(`No se encontr贸 un producto con ID ${id}`);\n    }\n  }\n  guardar() {\n    if (this.productoSeleccionado) {\n      const params = new HttpParams().set('nombre', this.productoSeleccionado.nombre || '').set('descripcion', this.productoSeleccionado.descripcion || '');\n      console.log(params);\n      this.productoService.actualizar(this.productoSeleccionado.id, params).subscribe({\n        next: response => {\n          console.log('Respuesta del servidor:', response);\n          // Recargar la lista de productos\n          this.cargarListaProductos();\n        },\n        error: error => {\n          console.error('Error al actualizar el producto:', error);\n        }\n      });\n    }\n  }\n  cargarListaProductos() {\n    this.productoService.getProductos().subscribe(productos => {\n      this.productos = productos;\n    });\n  }\n  seleccionarProducto(producto) {\n    // Almacena el producto seleccionado para su posterior uso en la creaci贸n de la oferta\n    this.ofertaProductoService.enviarProductoSeleccionado(producto);\n  }\n};\nListaProductosComponent = __decorate([Component({\n  selector: 'app-lista-productos',\n  templateUrl: './lista-productos.component.html',\n  styleUrls: ['./lista-productos.component.css']\n})], ListaProductosComponent);","map":{"version":3,"names":["Component","HttpParams","ListaProductosComponent","constructor","productoService","ofertaProductoService","productos","productoSeleccionado","id","nombre","descripcion","ngOnInit","getProductos","subscribe","console","log","editarProducto","productoElegido","find","p","error","guardar","params","set","actualizar","next","response","cargarListaProductos","seleccionarProducto","producto","enviarProductoSeleccionado","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\SIMM\\Desktop\\Nueva carpeta\\Desarrollo-de-software\\Proyecto-Catedra-Desarrollo-de-Software-front--master\\src\\app\\lista-productos\\lista-productos.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ProductosService } from '../compPrincipal/producto/productos.service'; \nimport { Producto } from '../compPrincipal/interfaces/Producto';\nimport { HttpParams } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-lista-productos',\n  templateUrl: './lista-productos.component.html',\n  styleUrls: ['./lista-productos.component.css']\n})\nexport class ListaProductosComponent {\n  productos: Producto[] = [];\n  productoSeleccionado: Producto= { id: 0, nombre: '', descripcion: '' };\n\n\n  constructor(private productoService: ProductosService, private ofertaProductoService) {}\n  \n  ngOnInit() {\n    //consigue la lista de productos para mostrar en la tabla\n    this.productoService.getProductos().subscribe((productos: Producto[]) => {\n      console.log(\"Productos: \", productos);\n      this.productos = productos;\n    });\n  }\n\n  editarProducto(id: number): void {\n    console.log(`Editar producto con ID: ${id}`);\n    const productoElegido = this.productos.find(p => p.id === id);\n    console.log(\"Producto a elegir: \", productoElegido);\n    if (productoElegido) {\n      this.productoSeleccionado = productoElegido;\n      console.log(this.productoSeleccionado);\n    } else {\n      console.error(`No se encontr贸 un producto con ID ${id}`);\n    }\n  }\n\n  guardar(): void {\n    if (this.productoSeleccionado) {\n      const params = new HttpParams()\n        .set('nombre', this.productoSeleccionado.nombre || '')\n        .set('descripcion', this.productoSeleccionado.descripcion || '');\n      console.log(params);\n      this.productoService.actualizar(this.productoSeleccionado.id, params).subscribe({\n        next: (response) => {\n          console.log('Respuesta del servidor:', response);\n          // Recargar la lista de productos\n          this.cargarListaProductos();\n        },\n        error: (error) => {\n          console.error('Error al actualizar el producto:', error);\n        }\n      });\n    }\n  }\n  \n  cargarListaProductos() {\n    this.productoService.getProductos().subscribe((productos: Producto[]) => {\n      this.productos = productos;\n    });\n  }\n\n  seleccionarProducto(producto: Producto): void {\n    // Almacena el producto seleccionado para su posterior uso en la creaci贸n de la oferta\n    this.ofertaProductoService.enviarProductoSeleccionado(producto);\n  }\n  \n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAGzC,SAASC,UAAU,QAAQ,sBAAsB;AAQ1C,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAKlCC,YAAoBC,eAAiC,EAAUC,qBAAqB;IAAhE,KAAAD,eAAe,GAAfA,eAAe;IAA4B,KAAAC,qBAAqB,GAArBA,qBAAqB;IAJpF,KAAAC,SAAS,GAAe,EAAE;IAC1B,KAAAC,oBAAoB,GAAY;MAAEC,EAAE,EAAE,CAAC;MAAEC,MAAM,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAE,CAAE;EAGiB;EAEvFC,QAAQA,CAAA;IACN;IACA,IAAI,CAACP,eAAe,CAACQ,YAAY,EAAE,CAACC,SAAS,CAAEP,SAAqB,IAAI;MACtEQ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAET,SAAS,CAAC;MACrC,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,CAAC;EACJ;EAEAU,cAAcA,CAACR,EAAU;IACvBM,OAAO,CAACC,GAAG,CAAC,2BAA2BP,EAAE,EAAE,CAAC;IAC5C,MAAMS,eAAe,GAAG,IAAI,CAACX,SAAS,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACX,EAAE,KAAKA,EAAE,CAAC;IAC7DM,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEE,eAAe,CAAC;IACnD,IAAIA,eAAe,EAAE;MACnB,IAAI,CAACV,oBAAoB,GAAGU,eAAe;MAC3CH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,oBAAoB,CAAC;KACvC,MAAM;MACLO,OAAO,CAACM,KAAK,CAAC,qCAAqCZ,EAAE,EAAE,CAAC;;EAE5D;EAEAa,OAAOA,CAAA;IACL,IAAI,IAAI,CAACd,oBAAoB,EAAE;MAC7B,MAAMe,MAAM,GAAG,IAAIrB,UAAU,EAAE,CAC5BsB,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAChB,oBAAoB,CAACE,MAAM,IAAI,EAAE,CAAC,CACrDc,GAAG,CAAC,aAAa,EAAE,IAAI,CAAChB,oBAAoB,CAACG,WAAW,IAAI,EAAE,CAAC;MAClEI,OAAO,CAACC,GAAG,CAACO,MAAM,CAAC;MACnB,IAAI,CAAClB,eAAe,CAACoB,UAAU,CAAC,IAAI,CAACjB,oBAAoB,CAACC,EAAE,EAAEc,MAAM,CAAC,CAACT,SAAS,CAAC;QAC9EY,IAAI,EAAGC,QAAQ,IAAI;UACjBZ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEW,QAAQ,CAAC;UAChD;UACA,IAAI,CAACC,oBAAoB,EAAE;QAC7B,CAAC;QACDP,KAAK,EAAGA,KAAK,IAAI;UACfN,OAAO,CAACM,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QAC1D;OACD,CAAC;;EAEN;EAEAO,oBAAoBA,CAAA;IAClB,IAAI,CAACvB,eAAe,CAACQ,YAAY,EAAE,CAACC,SAAS,CAAEP,SAAqB,IAAI;MACtE,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,CAAC;EACJ;EAEAsB,mBAAmBA,CAACC,QAAkB;IACpC;IACA,IAAI,CAACxB,qBAAqB,CAACyB,0BAA0B,CAACD,QAAQ,CAAC;EACjE;CAED;AAzDY3B,uBAAuB,GAAA6B,UAAA,EALnC/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWhC,uBAAuB,CAyDnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}