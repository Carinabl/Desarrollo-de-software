{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ListaOfertasComponent = class ListaOfertasComponent {\n  constructor(ofertaService, listaOfertasService, ofertaProductoService) {\n    this.ofertaService = ofertaService;\n    this.listaOfertasService = listaOfertasService;\n    this.ofertaProductoService = ofertaProductoService;\n    this.ofertas = [];\n    this.ofertaSeleccionada = {\n      id: 0,\n      codigo: 0,\n      stock: 0,\n      descripcion: '',\n      precio: 0,\n      vigencia: ''\n    };\n    this.productos = [];\n    this.ofertas = ofertaService.getListaOfertas();\n  }\n  ngOnInit() {}\n  // Expose the service methods to the template\n  editarOferta(oferta) {\n    this.listaOfertasService.editarOferta(oferta);\n    this.ofertaSeleccionada = {\n      ...oferta\n    }; // Optionally set the selected offer in the component\n  }\n  // Call the guardarOferta method without passing any arguments\n  guardarOferta() {\n    if (this.ofertaSeleccionada) {\n      // Save the edited product using the service method\n      this.listaOfertasService.guardarOferta();\n      // Optionally, update the local products list\n      const updatedOffers = this.ofertas.map(oferta => {\n        return oferta.id === this.ofertaSeleccionada?.id ? {\n          ...this.ofertaSeleccionada\n        } : oferta;\n      });\n      this.ofertas = [...updatedOffers];\n    }\n  }\n};\nListaOfertasComponent = __decorate([Component({\n  selector: 'app-lista-ofertas',\n  templateUrl: './lista-ofertas.component.html',\n  styleUrls: ['./lista-ofertas.component.css']\n})], ListaOfertasComponent);","map":{"version":3,"names":["Component","ListaOfertasComponent","constructor","ofertaService","listaOfertasService","ofertaProductoService","ofertas","ofertaSeleccionada","id","codigo","stock","descripcion","precio","vigencia","productos","getListaOfertas","ngOnInit","editarOferta","oferta","guardarOferta","updatedOffers","map","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\SIMM\\Desktop\\Nueva carpeta\\Desarrollo-de-software\\Proyecto-Catedra-Desarrollo-de-Software-front--master\\src\\app\\lista-ofertas\\lista-ofertas.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Oferta } from '../compPrincipal/interfaces/oferta';\nimport { ListaOfertasService } from '../lista-ofertas.service';\nimport { OfertaService } from '../oferta.service';\nimport { OfertaProductoService } from '../oferta-producto.service';\n\n@Component({\n  selector: 'app-lista-ofertas',\n  templateUrl: './lista-ofertas.component.html',\n  styleUrls: ['./lista-ofertas.component.css']\n})\nexport class ListaOfertasComponent implements OnInit{\n  ofertas: Oferta[] = [];\n  ofertaSeleccionada: Oferta = { id: 0, codigo: 0, stock: 0, descripcion:'', precio: 0, vigencia:''};\n  productos: any[] = [];\n\n  constructor(private ofertaService: OfertaService, private listaOfertasService: ListaOfertasService, private ofertaProductoService: OfertaProductoService) {\n    \n    this.ofertas = ofertaService.getListaOfertas();\n\n  }\n  \n  ngOnInit() {}\n\n  // Expose the service methods to the template\n  editarOferta(oferta: Oferta): void {\n    this.listaOfertasService.editarOferta(oferta);\n    this.ofertaSeleccionada = { ...oferta }; // Optionally set the selected offer in the component\n  }\n\n    // Call the guardarOferta method without passing any arguments\n    guardarOferta(): void {\n      if (this.ofertaSeleccionada) {\n        // Save the edited product using the service method\n        this.listaOfertasService.guardarOferta();\n  \n        // Optionally, update the local products list\n        const updatedOffers = this.ofertas.map(oferta => {\n          return oferta.id === this.ofertaSeleccionada?.id ? { ...this.ofertaSeleccionada } : oferta;\n        });\n        this.ofertas = [...updatedOffers];\n      }\n    }\n\n   \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAKhCC,YAAoBC,aAA4B,EAAUC,mBAAwC,EAAUC,qBAA4C;IAApI,KAAAF,aAAa,GAAbA,aAAa;IAAyB,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAA+B,KAAAC,qBAAqB,GAArBA,qBAAqB;IAJjI,KAAAC,OAAO,GAAa,EAAE;IACtB,KAAAC,kBAAkB,GAAW;MAAEC,EAAE,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,WAAW,EAAC,EAAE;MAAEC,MAAM,EAAE,CAAC;MAAEC,QAAQ,EAAC;IAAE,CAAC;IAClG,KAAAC,SAAS,GAAU,EAAE;IAInB,IAAI,CAACR,OAAO,GAAGH,aAAa,CAACY,eAAe,EAAE;EAEhD;EAEAC,QAAQA,CAAA,GAAI;EAEZ;EACAC,YAAYA,CAACC,MAAc;IACzB,IAAI,CAACd,mBAAmB,CAACa,YAAY,CAACC,MAAM,CAAC;IAC7C,IAAI,CAACX,kBAAkB,GAAG;MAAE,GAAGW;IAAM,CAAE,CAAC,CAAC;EAC3C;EAEE;EACAC,aAAaA,CAAA;IACX,IAAI,IAAI,CAACZ,kBAAkB,EAAE;MAC3B;MACA,IAAI,CAACH,mBAAmB,CAACe,aAAa,EAAE;MAExC;MACA,MAAMC,aAAa,GAAG,IAAI,CAACd,OAAO,CAACe,GAAG,CAACH,MAAM,IAAG;QAC9C,OAAOA,MAAM,CAACV,EAAE,KAAK,IAAI,CAACD,kBAAkB,EAAEC,EAAE,GAAG;UAAE,GAAG,IAAI,CAACD;QAAkB,CAAE,GAAGW,MAAM;MAC5F,CAAC,CAAC;MACF,IAAI,CAACZ,OAAO,GAAG,CAAC,GAAGc,aAAa,CAAC;;EAErC;CAGH;AAlCYnB,qBAAqB,GAAAqB,UAAA,EALjCtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWxB,qBAAqB,CAkCjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}