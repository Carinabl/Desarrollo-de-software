{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductosService {\n  //private urlEliminar = 'http://localhost:8080/producto/delete';\n  constructor(http) {\n    this.http = http;\n    this.productoComponent = [];\n    this.productos = [];\n    this.apiUrl = 'http://localhost:8080/producto/lista';\n    this.urlAlta = 'http://localhost:8080/producto/alta';\n    this.urlModificar = 'http://localhost:8080/producto/editar';\n  }\n  getProductos() {\n    return this.http.get(this.apiUrl);\n  }\n  crearProducto(producto) {\n    return this.http.post(this.urlAlta, producto);\n  }\n  agregarProducto(producto) {\n    this.productos.push(producto);\n  }\n  actualizar(producto) {\n    const params = new HttpParams().set('nombre', producto.nombre || '') // Asegura que si el nombre es null o undefined, se envíe como cadena vacía\n    .set('descripcion', producto.descripcion || '');\n    console.log('Datos enviados en la solicitud PUT:', params);\n    return this.http.put(`${this.urlModificar}/${producto.id}`, {}, {\n      params\n    });\n  }\n  static #_ = this.ɵfac = function ProductosService_Factory(t) {\n    return new (t || ProductosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductosService,\n    factory: ProductosService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpParams","ProductosService","constructor","http","productoComponent","productos","apiUrl","urlAlta","urlModificar","getProductos","get","crearProducto","producto","post","agregarProducto","push","actualizar","params","set","nombre","descripcion","console","log","put","id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\SIMM\\Desktop\\Nueva carpeta\\Desarrollo-de-software\\Proyecto-Catedra-Desarrollo-de-Software-front--master\\src\\app\\compPrincipal\\producto\\productos.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ProductoComponent } from './producto.component';\nimport { Producto } from '../interfaces/Producto';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductosService {\n\n  productoComponent: ProductoComponent [] = [];\n  private productos: Producto[] = [];\n\n  private apiUrl = 'http://localhost:8080/producto/lista';\n  private urlAlta = 'http://localhost:8080/producto/alta';\n  private urlModificar = 'http://localhost:8080/producto/editar';\n  //private urlEliminar = 'http://localhost:8080/producto/delete';\n\n  constructor(private http: HttpClient) { }\n  \n\n  getProductos(): Observable<Producto[]> {\n    return this.http.get<Producto[]>(this.apiUrl);\n  }\n  \n  \n\n  crearProducto(producto: Producto): Observable<any> {\n    return this.http.post(this.urlAlta, producto);\n  }\n\n  agregarProducto(producto: Producto): void {\n    this.productos.push(producto);\n  }\n\n  actualizar(producto: Producto): Observable<any> {\n    const params = new HttpParams()\n      .set('nombre', producto.nombre || '')  // Asegura que si el nombre es null o undefined, se envíe como cadena vacía\n      .set('descripcion', producto.descripcion || '');\n      console.log('Datos enviados en la solicitud PUT:', params);\n      return this.http.put(`${this.urlModificar}/${producto.id}`, {}, { params });\n  }\n\n  /*\n  eliminar(id: number): Observable<any> {\n    return this.http.delete(`${this.urlEliminar}/${id}`);\n  */\n  \n}\n\n"],"mappings":"AAGA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAM7D,OAAM,MAAOC,gBAAgB;EAQ3B;EAEAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARxB,KAAAC,iBAAiB,GAAyB,EAAE;IACpC,KAAAC,SAAS,GAAe,EAAE;IAE1B,KAAAC,MAAM,GAAG,sCAAsC;IAC/C,KAAAC,OAAO,GAAG,qCAAqC;IAC/C,KAAAC,YAAY,GAAG,uCAAuC;EAGtB;EAGxCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAa,IAAI,CAACJ,MAAM,CAAC;EAC/C;EAIAK,aAAaA,CAACC,QAAkB;IAC9B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACN,OAAO,EAAEK,QAAQ,CAAC;EAC/C;EAEAE,eAAeA,CAACF,QAAkB;IAChC,IAAI,CAACP,SAAS,CAACU,IAAI,CAACH,QAAQ,CAAC;EAC/B;EAEAI,UAAUA,CAACJ,QAAkB;IAC3B,MAAMK,MAAM,GAAG,IAAIjB,UAAU,EAAE,CAC5BkB,GAAG,CAAC,QAAQ,EAAEN,QAAQ,CAACO,MAAM,IAAI,EAAE,CAAC,CAAE;IAAA,CACtCD,GAAG,CAAC,aAAa,EAAEN,QAAQ,CAACQ,WAAW,IAAI,EAAE,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEL,MAAM,CAAC;IAC1D,OAAO,IAAI,CAACd,IAAI,CAACoB,GAAG,CAAC,GAAG,IAAI,CAACf,YAAY,IAAII,QAAQ,CAACY,EAAE,EAAE,EAAE,EAAE,EAAE;MAAEP;IAAM,CAAE,CAAC;EAC/E;EAAC,QAAAQ,CAAA,G;qBAjCUxB,gBAAgB,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhB7B,gBAAgB;IAAA8B,OAAA,EAAhB9B,gBAAgB,CAAA+B,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}