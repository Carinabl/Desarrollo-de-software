{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nexport let FormProductoComponent = class FormProductoComponent {\n  ngOnInit() {}\n  constructor(fb, productoS) {\n    this.fb = fb;\n    this.productoS = productoS;\n    this.frmProducto = this.fb.group({\n      nombre: ['', [Validators.required, Validators.minLength(3)]],\n      descripcion: ['', Validators.required],\n      categoria: [null]\n    });\n  }\n  onSubmit() {\n    //alert(\"Se guardó\");\n    console.log(this.frmProducto);\n    //console.log(this.frmProducto.value);\n    const nombreControl = this.frmProducto.get('nombre');\n    let error = null;\n    if (nombreControl) {\n      console.log('Valor del control nombre:', nombreControl.value);\n      // Verificar la validación 'required'\n      const isRequiredError = nombreControl.hasError('required');\n      if (isRequiredError) {\n        console.log('El campo nombre es requerido.');\n        error = {\n          required: true\n        }; // Almacena el error en la variable 'error'\n      }\n      //logica para agregar producto nuevo luego de presionar boton submit\n      const nuevoProducto = this.frmProducto.value;\n      console.log(nuevoProducto);\n      this.productoS.crearProducto(nuevoProducto).subscribe(() => {\n        // Agregar el nuevo producto localmente\n        this.productoS.agregarProducto(nuevoProducto);\n        // Después de agregar el producto, puedes recargar la lista de productos\n        this.productoS.getProductos().subscribe(productos => {\n          console.log(productos);\n          // Actualiza la lista de productos en tu componente\n        });\n      });\n    }\n  }\n\n  abrirMensaje() {\n    Swal.fire({\n      title: \"¿Desea confirmar los cambios?\",\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: \"Guardar\",\n      denyButtonText: \"No guardar\"\n    }).then(result => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        Swal.fire(\"¡Guardado con exito!\", \"\", \"success\");\n      } else if (result.isDenied) {\n        Swal.fire(\"No se guardaron los cambios\", \"\", \"info\");\n      }\n    });\n  }\n};\nFormProductoComponent = __decorate([Component({\n  selector: 'app-form-producto',\n  templateUrl: './form-producto.component.html',\n  styleUrls: ['./form-producto.component.css']\n})], FormProductoComponent);","map":{"version":3,"names":["Component","Validators","Swal","FormProductoComponent","ngOnInit","constructor","fb","productoS","frmProducto","group","nombre","required","minLength","descripcion","categoria","onSubmit","console","log","nombreControl","get","error","value","isRequiredError","hasError","nuevoProducto","crearProducto","subscribe","agregarProducto","getProductos","productos","abrirMensaje","fire","title","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","then","result","isConfirmed","isDenied","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\SIMM\\Desktop\\Nueva carpeta\\Desarrollo-de-software\\Proyecto-Catedra-Desarrollo-de-Software-front--master\\src\\app\\form-producto\\form-producto.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { Producto } from '../compPrincipal/interfaces/Producto';\nimport { ProductosService } from '../compPrincipal/producto/productos.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-form-producto',\n  templateUrl: './form-producto.component.html',\n  styleUrls: ['./form-producto.component.css']\n})\n\nexport class FormProductoComponent implements OnInit {\n  productoService: any;\n  ngOnInit(): void {}\n  \n  frmProducto: FormGroup;\n\n  constructor (private fb: FormBuilder, private productoS: ProductosService){\n    \n    this.frmProducto = this.fb.group({\n      nombre: ['', [Validators.required, Validators.minLength(3)]],\n      descripcion: ['', Validators.required],\n      categoria: [null]\n    });\n\n    \n  }\n\n\n  \n\n  onSubmit(){\n    //alert(\"Se guardó\");\n    console.log(this.frmProducto);\n    //console.log(this.frmProducto.value);\n\n    const nombreControl: AbstractControl | null = this.frmProducto.get('nombre');\n    let error: ValidationErrors | null = null;\n\n    if (nombreControl) {\n      console.log('Valor del control nombre:', nombreControl.value);\n\n      // Verificar la validación 'required'\n      const isRequiredError: boolean = nombreControl.hasError('required');\n\n      if (isRequiredError) {\n      console.log('El campo nombre es requerido.');\n      error = { required: true }; // Almacena el error en la variable 'error'\n      }\n\n      //logica para agregar producto nuevo luego de presionar boton submit\n      const nuevoProducto: Producto = this.frmProducto.value;\n      console.log(nuevoProducto);\n      this.productoS.crearProducto(nuevoProducto).subscribe(() => {\n      // Agregar el nuevo producto localmente\n      this.productoS.agregarProducto(nuevoProducto);\n    \n      // Después de agregar el producto, puedes recargar la lista de productos\n      this.productoS.getProductos().subscribe((productos: Producto[]) => {\n        console.log(productos);\n        // Actualiza la lista de productos en tu componente\n        });\n      });\n    }\n  }\n\n\n  abrirMensaje(): void{\n    Swal.fire({\n      title: \"¿Desea confirmar los cambios?\",\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: \"Guardar\",\n      denyButtonText: \"No guardar\"\n    }).then((result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        Swal.fire(\"¡Guardado con exito!\", \"\", \"success\");\n      } else if (result.isDenied) {\n        Swal.fire(\"No se guardaron los cambios\", \"\", \"info\");\n      }\n    });\n    }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAA2C,gBAAgB;AAGtG,OAAOC,IAAI,MAAM,aAAa;AAQvB,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAEhCC,QAAQA,CAAA,GAAU;EAIlBC,YAAqBC,EAAe,EAAUC,SAA2B;IAApD,KAAAD,EAAE,GAAFA,EAAE;IAAuB,KAAAC,SAAS,GAATA,SAAS;IAErD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC/BC,MAAM,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5DC,WAAW,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACU,QAAQ,CAAC;MACtCG,SAAS,EAAE,CAAC,IAAI;KACjB,CAAC;EAGJ;EAKAC,QAAQA,CAAA;IACN;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,WAAW,CAAC;IAC7B;IAEA,MAAMU,aAAa,GAA2B,IAAI,CAACV,WAAW,CAACW,GAAG,CAAC,QAAQ,CAAC;IAC5E,IAAIC,KAAK,GAA4B,IAAI;IAEzC,IAAIF,aAAa,EAAE;MACjBF,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEC,aAAa,CAACG,KAAK,CAAC;MAE7D;MACA,MAAMC,eAAe,GAAYJ,aAAa,CAACK,QAAQ,CAAC,UAAU,CAAC;MAEnE,IAAID,eAAe,EAAE;QACrBN,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC5CG,KAAK,GAAG;UAAET,QAAQ,EAAE;QAAI,CAAE,CAAC,CAAC;;MAG5B;MACA,MAAMa,aAAa,GAAa,IAAI,CAAChB,WAAW,CAACa,KAAK;MACtDL,OAAO,CAACC,GAAG,CAACO,aAAa,CAAC;MAC1B,IAAI,CAACjB,SAAS,CAACkB,aAAa,CAACD,aAAa,CAAC,CAACE,SAAS,CAAC,MAAK;QAC3D;QACA,IAAI,CAACnB,SAAS,CAACoB,eAAe,CAACH,aAAa,CAAC;QAE7C;QACA,IAAI,CAACjB,SAAS,CAACqB,YAAY,EAAE,CAACF,SAAS,CAAEG,SAAqB,IAAI;UAChEb,OAAO,CAACC,GAAG,CAACY,SAAS,CAAC;UACtB;QACA,CAAC,CAAC;MACJ,CAAC,CAAC;;EAEN;;EAGAC,YAAYA,CAAA;IACV5B,IAAI,CAAC6B,IAAI,CAAC;MACRC,KAAK,EAAE,+BAA+B;MACtCC,cAAc,EAAE,IAAI;MACpBC,gBAAgB,EAAE,IAAI;MACtBC,iBAAiB,EAAE,SAAS;MAC5BC,cAAc,EAAE;KACjB,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAI;MACjB;MACA,IAAIA,MAAM,CAACC,WAAW,EAAE;QACtBrC,IAAI,CAAC6B,IAAI,CAAC,sBAAsB,EAAE,EAAE,EAAE,SAAS,CAAC;OACjD,MAAM,IAAIO,MAAM,CAACE,QAAQ,EAAE;QAC1BtC,IAAI,CAAC6B,IAAI,CAAC,6BAA6B,EAAE,EAAE,EAAE,MAAM,CAAC;;IAExD,CAAC,CAAC;EACF;CACH;AAxEY5B,qBAAqB,GAAAsC,UAAA,EANjCzC,SAAS,CAAC;EACT0C,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EAEWzC,qBAAqB,CAwEjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}